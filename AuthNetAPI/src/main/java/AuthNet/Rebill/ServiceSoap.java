
package AuthNet.Rebill;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ServiceSoap", targetNamespace = "https://api.authorize.net/soap/v1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceSoap {


    /**
     * This method is used to test the availability of the API.
     * 
     * @return
     *     returns AuthNet.Rebill.ANetApiResponseType
     */
    @WebMethod(operationName = "IsAlive", action = "https://api.authorize.net/soap/v1/IsAlive")
    @WebResult(name = "IsAliveResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "IsAlive", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.IsAlive")
    @ResponseWrapper(localName = "IsAliveResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.IsAliveResponse")
    public ANetApiResponseType isAlive();

    /**
     * This method is used to test the availability of the API.
     * 
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.ANetApiResponseType
     */
    @WebMethod(operationName = "AuthenticateTest", action = "https://api.authorize.net/soap/v1/AuthenticateTest")
    @WebResult(name = "AuthenticateTestResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "AuthenticateTest", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.AuthenticateTest")
    @ResponseWrapper(localName = "AuthenticateTestResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.AuthenticateTestResponse")
    public ANetApiResponseType authenticateTest(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication);

    /**
     * This method is used to create a new ARB subscription.
     * 
     * @param subscription
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.ARBCreateSubscriptionResponseType
     */
    @WebMethod(operationName = "ARBCreateSubscription", action = "https://api.authorize.net/soap/v1/ARBCreateSubscription")
    @WebResult(name = "ARBCreateSubscriptionResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "ARBCreateSubscription", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBCreateSubscription")
    @ResponseWrapper(localName = "ARBCreateSubscriptionResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBCreateSubscriptionResponse")
    public ARBCreateSubscriptionResponseType arbCreateSubscription(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "subscription", targetNamespace = "https://api.authorize.net/soap/v1/")
        ARBSubscriptionType subscription);

    /**
     * This method is used to update an existing ARB subscription.
     * 
     * @param subscription
     * @param merchantAuthentication
     * @param subscriptionId
     * @return
     *     returns AuthNet.Rebill.ARBUpdateSubscriptionResponseType
     */
    @WebMethod(operationName = "ARBUpdateSubscription", action = "https://api.authorize.net/soap/v1/ARBUpdateSubscription")
    @WebResult(name = "ARBUpdateSubscriptionResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "ARBUpdateSubscription", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBUpdateSubscription")
    @ResponseWrapper(localName = "ARBUpdateSubscriptionResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBUpdateSubscriptionResponse")
    public ARBUpdateSubscriptionResponseType arbUpdateSubscription(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "subscriptionId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long subscriptionId,
        @WebParam(name = "subscription", targetNamespace = "https://api.authorize.net/soap/v1/")
        ARBSubscriptionType subscription);

    /**
     * This method is used to cancel an existing ARB subscription.
     * 
     * @param merchantAuthentication
     * @param subscriptionId
     * @return
     *     returns AuthNet.Rebill.ARBCancelSubscriptionResponseType
     */
    @WebMethod(operationName = "ARBCancelSubscription", action = "https://api.authorize.net/soap/v1/ARBCancelSubscription")
    @WebResult(name = "ARBCancelSubscriptionResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "ARBCancelSubscription", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBCancelSubscription")
    @ResponseWrapper(localName = "ARBCancelSubscriptionResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ARBCancelSubscriptionResponse")
    public ARBCancelSubscriptionResponseType arbCancelSubscription(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "subscriptionId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long subscriptionId);

    /**
     * This method is used to create a new customer profile along with any customer payment profiles and customer shipping addresses for the customer profile.
     * 
     * @param validationMode
     * @param merchantAuthentication
     * @param profile
     * @return
     *     returns AuthNet.Rebill.CreateCustomerProfileResponseType
     */
    @WebMethod(operationName = "CreateCustomerProfile", action = "https://api.authorize.net/soap/v1/CreateCustomerProfile")
    @WebResult(name = "CreateCustomerProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "CreateCustomerProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerProfile")
    @ResponseWrapper(localName = "CreateCustomerProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerProfileResponse")
    public CreateCustomerProfileResponseType createCustomerProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "profile", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerProfileType profile,
        @WebParam(name = "validationMode", targetNamespace = "https://api.authorize.net/soap/v1/")
        ValidationModeEnum validationMode);

    /**
     * This method is used to create a new customer payment profile for an existing customer profile.
     * 
     * @param validationMode
     * @param paymentProfile
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.CreateCustomerPaymentProfileResponseType
     */
    @WebMethod(operationName = "CreateCustomerPaymentProfile", action = "https://api.authorize.net/soap/v1/CreateCustomerPaymentProfile")
    @WebResult(name = "CreateCustomerPaymentProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "CreateCustomerPaymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerPaymentProfile")
    @ResponseWrapper(localName = "CreateCustomerPaymentProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerPaymentProfileResponse")
    public CreateCustomerPaymentProfileResponseType createCustomerPaymentProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "paymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerPaymentProfileType paymentProfile,
        @WebParam(name = "validationMode", targetNamespace = "https://api.authorize.net/soap/v1/")
        ValidationModeEnum validationMode);

    /**
     * This method is used to create a new customer shipping address for an existing customer profile.
     * 
     * @param address
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.CreateCustomerShippingAddressResponseType
     */
    @WebMethod(operationName = "CreateCustomerShippingAddress", action = "https://api.authorize.net/soap/v1/CreateCustomerShippingAddress")
    @WebResult(name = "CreateCustomerShippingAddressResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "CreateCustomerShippingAddress", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerShippingAddress")
    @ResponseWrapper(localName = "CreateCustomerShippingAddressResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerShippingAddressResponse")
    public CreateCustomerShippingAddressResponseType createCustomerShippingAddress(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "address", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerAddressType address);

    /**
     * This method is used to retrieve an existing customer profile along with all the customer payment profiles and customer shipping addresses for the customer profile.
     * 
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.GetCustomerProfileResponseType
     */
    @WebMethod(operationName = "GetCustomerProfile", action = "https://api.authorize.net/soap/v1/GetCustomerProfile")
    @WebResult(name = "GetCustomerProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "GetCustomerProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerProfile")
    @ResponseWrapper(localName = "GetCustomerProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerProfileResponse")
    public GetCustomerProfileResponseType getCustomerProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId);

    /**
     * This method is used to retrieve an existing customer payment profile for a customer profile.
     * 
     * @param customerPaymentProfileId
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.GetCustomerPaymentProfileResponseType
     */
    @WebMethod(operationName = "GetCustomerPaymentProfile", action = "https://api.authorize.net/soap/v1/GetCustomerPaymentProfile")
    @WebResult(name = "GetCustomerPaymentProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "GetCustomerPaymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerPaymentProfile")
    @ResponseWrapper(localName = "GetCustomerPaymentProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerPaymentProfileResponse")
    public GetCustomerPaymentProfileResponseType getCustomerPaymentProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "customerPaymentProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerPaymentProfileId);

    /**
     * This method is used to retrieve an existing customer shipping address for a customer profile.
     * 
     * @param customerAddressId
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.GetCustomerShippingAddressResponseType
     */
    @WebMethod(operationName = "GetCustomerShippingAddress", action = "https://api.authorize.net/soap/v1/GetCustomerShippingAddress")
    @WebResult(name = "GetCustomerShippingAddressResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "GetCustomerShippingAddress", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerShippingAddress")
    @ResponseWrapper(localName = "GetCustomerShippingAddressResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerShippingAddressResponse")
    public GetCustomerShippingAddressResponseType getCustomerShippingAddress(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "customerAddressId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerAddressId);

    /**
     * This method is used to update an existing customer profile.
     * 
     * @param merchantAuthentication
     * @param profile
     * @return
     *     returns AuthNet.Rebill.UpdateCustomerProfileResponseType
     */
    @WebMethod(operationName = "UpdateCustomerProfile", action = "https://api.authorize.net/soap/v1/UpdateCustomerProfile")
    @WebResult(name = "UpdateCustomerProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "UpdateCustomerProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerProfile")
    @ResponseWrapper(localName = "UpdateCustomerProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerProfileResponse")
    public UpdateCustomerProfileResponseType updateCustomerProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "profile", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerProfileExType profile);

    /**
     * This method is used to update an existing customer payment profile for a customer profile.
     * 
     * @param validationMode
     * @param paymentProfile
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.UpdateCustomerPaymentProfileResponseType
     */
    @WebMethod(operationName = "UpdateCustomerPaymentProfile", action = "https://api.authorize.net/soap/v1/UpdateCustomerPaymentProfile")
    @WebResult(name = "UpdateCustomerPaymentProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "UpdateCustomerPaymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerPaymentProfile")
    @ResponseWrapper(localName = "UpdateCustomerPaymentProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerPaymentProfileResponse")
    public UpdateCustomerPaymentProfileResponseType updateCustomerPaymentProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "paymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerPaymentProfileExType paymentProfile,
        @WebParam(name = "validationMode", targetNamespace = "https://api.authorize.net/soap/v1/")
        ValidationModeEnum validationMode);

    /**
     * This method is used to update an existing customer shipping address for a customer profile.
     * 
     * @param address
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.UpdateCustomerShippingAddressResponseType
     */
    @WebMethod(operationName = "UpdateCustomerShippingAddress", action = "https://api.authorize.net/soap/v1/UpdateCustomerShippingAddress")
    @WebResult(name = "UpdateCustomerShippingAddressResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "UpdateCustomerShippingAddress", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerShippingAddress")
    @ResponseWrapper(localName = "UpdateCustomerShippingAddressResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.UpdateCustomerShippingAddressResponse")
    public UpdateCustomerShippingAddressResponseType updateCustomerShippingAddress(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "address", targetNamespace = "https://api.authorize.net/soap/v1/")
        CustomerAddressExType address);

    /**
     * This method is used to delete an existing customer profile along with all the customer payment profiles and customer shipping addresses for the customer profile.
     * 
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.DeleteCustomerProfileResponseType
     */
    @WebMethod(operationName = "DeleteCustomerProfile", action = "https://api.authorize.net/soap/v1/DeleteCustomerProfile")
    @WebResult(name = "DeleteCustomerProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "DeleteCustomerProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerProfile")
    @ResponseWrapper(localName = "DeleteCustomerProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerProfileResponse")
    public DeleteCustomerProfileResponseType deleteCustomerProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId);

    /**
     * This method is used to delete an existing customer payment profile from a customer profile.
     * 
     * @param customerPaymentProfileId
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.DeleteCustomerPaymentProfileResponseType
     */
    @WebMethod(operationName = "DeleteCustomerPaymentProfile", action = "https://api.authorize.net/soap/v1/DeleteCustomerPaymentProfile")
    @WebResult(name = "DeleteCustomerPaymentProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "DeleteCustomerPaymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerPaymentProfile")
    @ResponseWrapper(localName = "DeleteCustomerPaymentProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerPaymentProfileResponse")
    public DeleteCustomerPaymentProfileResponseType deleteCustomerPaymentProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "customerPaymentProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerPaymentProfileId);

    /**
     * This method is used to delete an existing customer shipping address from a customer profile.
     * 
     * @param customerAddressId
     * @param customerProfileId
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.DeleteCustomerShippingAddressResponseType
     */
    @WebMethod(operationName = "DeleteCustomerShippingAddress", action = "https://api.authorize.net/soap/v1/DeleteCustomerShippingAddress")
    @WebResult(name = "DeleteCustomerShippingAddressResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "DeleteCustomerShippingAddress", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerShippingAddress")
    @ResponseWrapper(localName = "DeleteCustomerShippingAddressResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.DeleteCustomerShippingAddressResponse")
    public DeleteCustomerShippingAddressResponseType deleteCustomerShippingAddress(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "customerAddressId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerAddressId);

    /**
     * This method is used to generate a payment transaction for a customer payment profile.
     * 
     * @param transaction
     * @param merchantAuthentication
     * @param extraOptions
     * @return
     *     returns AuthNet.Rebill.CreateCustomerProfileTransactionResponseType
     */
    @WebMethod(operationName = "CreateCustomerProfileTransaction", action = "https://api.authorize.net/soap/v1/CreateCustomerProfileTransaction")
    @WebResult(name = "CreateCustomerProfileTransactionResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "CreateCustomerProfileTransaction", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerProfileTransaction")
    @ResponseWrapper(localName = "CreateCustomerProfileTransactionResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.CreateCustomerProfileTransactionResponse")
    public CreateCustomerProfileTransactionResponseType createCustomerProfileTransaction(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "transaction", targetNamespace = "https://api.authorize.net/soap/v1/")
        ProfileTransactionType transaction,
        @WebParam(name = "extraOptions", targetNamespace = "https://api.authorize.net/soap/v1/")
        String extraOptions);

    /**
     * This method is used to check a customer payment profile by generating a test transaction for it.
     * 
     * @param customerPaymentProfileId
     * @param customerShippingAddressId
     * @param validationMode
     * @param customerProfileId
     * @param merchantAuthentication
     * @param cardCode
     * @return
     *     returns AuthNet.Rebill.ValidateCustomerPaymentProfileResponseType
     */
    @WebMethod(operationName = "ValidateCustomerPaymentProfile", action = "https://api.authorize.net/soap/v1/ValidateCustomerPaymentProfile")
    @WebResult(name = "ValidateCustomerPaymentProfileResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "ValidateCustomerPaymentProfile", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ValidateCustomerPaymentProfile")
    @ResponseWrapper(localName = "ValidateCustomerPaymentProfileResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.ValidateCustomerPaymentProfileResponse")
    public ValidateCustomerPaymentProfileResponseType validateCustomerPaymentProfile(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication,
        @WebParam(name = "customerProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerProfileId,
        @WebParam(name = "customerPaymentProfileId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerPaymentProfileId,
        @WebParam(name = "customerShippingAddressId", targetNamespace = "https://api.authorize.net/soap/v1/")
        long customerShippingAddressId,
        @WebParam(name = "cardCode", targetNamespace = "https://api.authorize.net/soap/v1/")
        String cardCode,
        @WebParam(name = "validationMode", targetNamespace = "https://api.authorize.net/soap/v1/")
        ValidationModeEnum validationMode);

    /**
     * This method is used to retrieve a list of profile identifiers.
     * 
     * @param merchantAuthentication
     * @return
     *     returns AuthNet.Rebill.GetCustomerProfileIdsResponseType
     */
    @WebMethod(operationName = "GetCustomerProfileIds", action = "https://api.authorize.net/soap/v1/GetCustomerProfileIds")
    @WebResult(name = "GetCustomerProfileIdsResult", targetNamespace = "https://api.authorize.net/soap/v1/")
    @RequestWrapper(localName = "GetCustomerProfileIds", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerProfileIds")
    @ResponseWrapper(localName = "GetCustomerProfileIdsResponse", targetNamespace = "https://api.authorize.net/soap/v1/", className = "AuthNet.Rebill.GetCustomerProfileIdsResponse")
    public GetCustomerProfileIdsResponseType getCustomerProfileIds(
        @WebParam(name = "merchantAuthentication", targetNamespace = "https://api.authorize.net/soap/v1/")
        MerchantAuthenticationType merchantAuthentication);

}
